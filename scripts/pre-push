#!/bin/bash

declare -A changed_files

while IFS= read -r env_file; do

  if [ ! -z $DEBUG ]; then echo "Processing $env_file"; fi

  # Get the corresponding .env.sample filename
  sample_file="${env_file}.sample"

  # Create .env.sample if it doesn't exist
  if [ ! -f "$sample_file" ]; then
    touch "$sample_file"
    if [ ! -z $DEBUG ]; then echo "Created $sample_file"; fi
    changed_files["$sample_file"]=1
  elif [ -s "$sample_file" ] && [ ! -z "$(tail -c1 "$sample_file")" ]; then
    # If it exists and is not empty, ensure it ends in a newline
    echo >> "$sample_file"
    if [ ! -z $DEBUG ]; then echo "Added trailing newline to $sample_file"; fi
    changed_files["$sample_file"]=1
  fi

  # Process the .env file and update the sample file
  # This preserves all keys but removes values
  while IFS= read -r line || [ -n "$line" ]; do

    # Skip comments and empty lines
    if [[ "$line" =~ ^[[:space:]]*# || -z "$line" ]]; then
      continue
    fi

    # Extract the key from the line
    if [[ "$line" =~ ^([^=]+)= ]]; then
      key="${BASH_REMATCH[1]}"

      # Check if key exists in sample file
      if ! grep -q "^${key}=" "$sample_file"; then
        echo -e "${key}=" >> "$sample_file"
        if [ ! -z $DEBUG ]; then echo "Added key $key to $sample_file"; fi
        changed_files["$sample_file"]=1
      fi
    fi

  done < $env_file

  if [ ! -z $DEBUG ]; then echo "Done processing $env_file"; fi

done < <(git ls-files -o ".env*" "**/.env*" | grep -v ".sample$")

if [ ${#changed_files[@]} -gt 0 ]; then
  echo "The following files were created/modified:"
  for file in ${!changed_files[@]}; do echo "    $file"; done

  # Allows us to read user input below, assigns stdin to keyboard
  exec < /dev/tty
  read -p "Stage and commit? (Y/n) " should_commit

  if [ "$should_commit" != "n" ] && [ "$should_commit" != "N" ]; then
    if ! git diff --staged --quiet; then
      echo "ERROR: you already have staged changes. Unstage or commit the changes and try again."
    else
      git add `echo ${!changed_files[@]}`
      git commit -m "dotenv-samplefile-autosync: Updated .env.sample files"
      echo "Committed changes. Try pushing again."
    fi
  fi

  exit 1
fi

exit 0
